static websites and dynamic websites
dynamic websites have user interaction and static website does not have any user interaction.

IIS - Internet Information Server Which is a server which helps to debug code and present to the UI/ screen of the user and vice versa.
basically it is for ki aap C# or VB.NET ko isme execute krke isko isi server execute krne ke bad aap browser me isko display kr sakte ho


Framework class library - FCL

final
Code behind mode


Every labels, checkboxes have methods, events and property
Every labels and controllers have inherited from their base class and object is created here for further use



button - properties ko change krna like color, appearacne, style and more
methods - its like operations
when I filled value with my name in google form after when I hit submit the method should clear the label / box also it should focus on the next check box
these are the types of the methods we can handle

Event like onclick ki yeh change ho jaye woh change ho jaye and all stufff

events matlab mere button click krne ke bad red color green color ban jaye and so so..


In a textbox all data are always stored in the form of string, if you want to convert it in integer you have to go with int32
Convert.ToInt32(numString);

or .ToString(); method
or Integer.parse method 

Will work smoothly in both the two languages
C sharp and VB.NET


Runat = "server" meaning server side control hai iska
server side control

Example to use the property and change the value of a box at runtime

TextBox.BackColor = System.Drawing.Color.Yellow;
TextBox.BorderStyle = BorderStyle.Solid;


Text Box Methods -

1) For Focus 
2) For Convert Text data into String

TextBox Events 

Text Changed - It will work when we change the value of text and when we change the value of text it calls.

Changing run time properties - 
TextBox1.Font.Italic = true;


TextBox1.ForeColor = System.Drawing.Color.Red;

Properties have different icons and methods have different icons

they all have different different shapes and icons


After all methods there is brackets, ();

her method ke bad (); bracket is compulsory....
TextBox2.Focus();


All proerties like color, border, width are same for all controllers

Group name matab like class in html

AdRotator banner control in ASP.NET ->  It uses XML
XML me khud ke tags ham bana sakte hai, Its simple then html
It's easy then html

Response.Redirect("Page jaha navigate krna hai"); Yeh url aur file per redirect krta hai, isme change hone ke bad url badal jayega
also
Server.Transfer("Page to show"); yeh page ko server per lata hai udha ker, isme url kabhi bhi change nhi hoga
(Home page per kisi dusri file ka data leker ana)

State Management in ASP.NET

Two types 
Cliend side
Cookies
Query string
hidden fields - use label to share data but its visibility should be 0
ViewState


ViewState - 
(FOR POST Request - server se routed hoker data ana) - for this submit button per click kro kavel, no any type of get request from the server
to transfer data and show to the user first and then send to the server 
Iski speciality - page reload ho jayega tab bhi me wapas se pahele wala data bhej dunga - viewState
ViewState ko use krne ke bad chahe page kitni bar bhi load ho ham uski pahele wale data ko back la sakte hai
(take user data and store data in the variable (programming variable) and use that variable later to return back its value.

e.g - ViewState["myvalue"] = TextBox1.Text.ToString(); <- isme ham myvalue ko as a key use kr rahe hai aur value store kr rahe hai for future
TextBox1.text = ViewState["myvalue"].ToString(); <- to retrive the value by using the key
Post request ke bad hi kavel data wapas laya ja sakta hai
is wale case me sabse pahele hamne value server me dali hai fir retrive kri hai

Performance: Performance is not good if we use a large amount of data 
because View State is stored in the page itself and storing a large value can cause the page to be slow.
It reserve the value in the postback request.

Detecting ViewState Tampering
To ensure that the ViewState has not been tampered with, ASP.NET provides a built-in mechanism using ViewState 
MAC (Message Authentication Code). Hereâ€™s how you can detect and prevent tampering:

ViewState MAC: By default, ViewState is protected with a MAC. 
This ensures that any tampering with the ViewState data will be detected when the data is posted back to the server. 
If the MAC does not match, ASP.NET throws an exception.






ager me janbhuj ker url per entre kru aur wapas reload kru us case me - GET request call hogi
ViewState ki value null ho jayegi
and reset ho jayega sab kuch


Server side
Session - isme her user ke liye alag alag files banegi ki kon user kab aaya aur uski kya demands thi
Application - it is same as session and its files also store on the server but it will use only single file and all the clients information will be stored in that single file only.
Caching


Events are like page load and page unload
Postback - Post server

IsPostBack - isse ham pata laga sakte hai ki page paheli bar load ho raha hai ya submit per wapas load ho raha hai
IsPostBack == true tabhi hoga jab form 2 bar load hoga(Submit hoga)
1 bar load hone per iski value false rahegi


QueryString - Client side state management process

Response.Redirect("WebForm2.aspx?myname=" + value); <- to send the query string - myname acts as a passkey
Request.QueryString["passkey"]; <- At the receiving end


Session State in ASP.Net

if(userpassword==correct){
Session["username"] = TextBox1.Text.ToString(); // creating a user session
Response.Redirect("Welcome.aspx"); // after successful password checked we proceed with the redirect to resources.

}
<- creating a session for the user
Session["username"] = TextBox1.Text.ToString();
e.g Session["username"] = "Kushagra Gupta";


Ager koi jabardati resource ke page ko direct access krta hai

paheli line will be
if(Session["username"==null]){  Response.Redirect("login.aspx");}
else{
procees...



For Destroy a session - When user clicks on logout button
Session.Abandon(); Method 
Response.Redirect("login.aspx"); // redirect back to login again


We can also pass session.Timeout() to destroy session for a period of time - 20 min or 10 min
after that time session destroys automatically
For this process, change the activity in Web.config() file
<sessionState timeout="2"></sessionState> -  iske bad 2 min me logout ho jayega




Application State Management - It is same to the session state
But it makes only 1 file and all user information will store in that file only whereas session storeage will create multiple different different files
based on the number of users.

Use - ki  kitni bar is page ko open kra gaya hai
use case me


Yeh complete application ko kitne loggo ne access kra hai uski info bhi rakhta hai
Application State her user ke liye 1 hi hoga


example like = mere resume ko kitni bar open kra gaya


Form Validation
Check data before submitting in the sql server

Client Side Validatir
1 - Required Field validator
2 - Range field validator
3 - Compare validator - Entre your password and retype of your password
4 - Regular Expressions to validate
5 - Custom Validator - server side validator - khud ka message


Methods - Control to validate - kisko check krna hai kisko validate krna hai\
ager woh galat data enter krta hai to kya message bhejna hai


View: Rendered through controller actions (e.g., return View()).
Partial View: Rendered within other views using helper methods (e.g., Html.Partial()).

Part of View is called Partial View


MVC Filter

Client -> Route -> Controller -> Filter/Middlewware -> Action -> Middleware/filter -> View

Before action method we have filters 
1 - Authentication
2 - Authorization


After action method and before view
1 - Exception and error handlinng
2 - Result and page rendering


what is connection pooling
Connection to a databasse is expensuive
Connection pooling is a technique used to manage database connections efficiently in a high-performance application. 
It involves maintaining a pool of active database connections that can be reused by different parts of the application,
instead of creating and closing a new connection every time a database operation is performed. 
This reduces the overhead associated with opening and closing connections, thereby improving the performance and scalability of the application.
Connections are always created in the starting of the application

Connection object pool maintained the starting connection and let the already existed connection reuse again and again
it also maintains that no new connection will be created

Initialization: When the application starts, a pool of database connections is created and maintained in memory.
Request for Connection: When an application needs to perform a database operation, it requests a connection from the pool.
Reuse Connection: If a connection is available in the pool, it is reused for the new operation. If no connection is available, a new one is created and added to the pool.
Release Connection: After the operation is completed, the connection is returned to the pool rather than being closed.
Management: The pool manager handles the creation, reuse, and destruction of connections based on configurable parameters like the maximum number of connections, idle timeout, etc.



Most Imp part of ASP.Net - Part of ADO.NET
DataSet - 
When we create a website and connect it with the Database, these three plays an important role
It is like mini database which have fast cache and responds fastly
A DataSet is an in-memory representation of data that provides a consistent relational programming model regardless of the data source. It can hold multiple tables and relationships between them.
Can hold multiple tables (like a mini-database).
Supports relations between tables.
Supports constraints like primary keys and foreign keys.
Can be serialized to XML for storage or transfer.


DataSet - 
It takes/fetch data from the data from the data source or database to the dataset
and
DataAdapter - A DataAdapter acts as a bridge between a DataSet and a data source for retrieving and saving data. It uses commands to retrieve data from the database and populate the DataSet
DataReader - 
 A DataReader provides a way of reading a forward-only stream of data rows from a data source. It is efficient for reading data but does not support updating or navigation.

Use Case: DataReader is used when you need to quickly and efficiently read data in a forward-only, read-only manner.

Features:

Provides fast, forward-only, read-only access to data.
Uses less memory compared to DataSet since it doesn't store data in memory.
Typically used with the ExecuteReader method of a SqlCommand object.


Difference between Web API and WCF?( WEb Api and rest api uses only http with xml/ JSON)
SOAP: WCF primarily uses SOAP (Simple Object Access Protocol) for XML-based messaging.
WCF provides communication between two or more nodes, WCF provides sending Binary format with TCP protocol.
WCF provides xml, binary code data transfer
WCF -asynchronous programming support

WCF - Windows Communication Foundation - for creating rest services
lot of configuration is needed to turn a WCF service into a REST Service. and specially it takes lot of configuration for soap then more in rest

WCF is good for Message queue, duplex communication, end to end message security, one way messaging.
It works on lt of protocol like TCP/IP/Http/Https
WEB APi is already designed for rest services.
REST services are state less, they dont depend on the neighbour states and request
making them scalable as each request is independent and does not rely on previous requests. 
This helps distribute the load and improve performance.
Standardized Communication:
Easy Communication and easy to configuration/use

How many Filter used in Web API?
Authentication Filter
Authorization Filter
Action Filter
Exception Filter
Result Filter


what are Immutable classes?
An immutable class is a class whose objects cannot be modified after creation.
using System;

class Kushagra
{
    public int A { get; }

    public Kushagra(int b)
    {
        A = b;
    }
}

class Program
{
    static void Main()
    {
        var k = new Kushagra(10);
        // The following line will cause a compilation error because 'A' is read-only
        // k.A = 11;
        Console.WriteLine(k.A);
    }
}


It must have only getter method and no setter method.

what are extension method??

 the extension method concept allows you to add new methods in the existing class or in the structure without modifying the source code of the original type 
and you do not require any kind of special permission from the original type and 
there is no need to re-compile the original type. It is introduced in C# 3.0.

Ek pahele se bani class me kuch new methods aur varibales ko add krdo
usko extend krdo bina usko chede new class bana ker

iske liye new class should be static
and use with this keyword


Static class - All fields, variables, classes are Static
 No instance will be created 
 Not inherited at all
 Direct Access to their static method.

using System;

namespace ExtensionMethodExample
{
    // Static class to contain the extension method
    public static class StringExtensions
    {
        // Extension method to count words in a string
        public static int WordCount(this string str)
        {
            if (string.IsNullOrWhiteSpace(str))
            {
                return 0;
            }

            string[] words = str.Split(' ', StringSplitOptions.RemoveEmptyEntries);
            return words.Length;
        }
    }

    class Program
    {
        static void Main()
        {
            string text = "Hello, this is an example of extension methods.";
            int wordCount = text.WordCount(); // Using the extension method
            Console.WriteLine($"Word count: {wordCount}");
        }
    }
}
adding the word count method to any reference classes



Characteristics of Static Classes
No Instances: You cannot create an instance of a static class using the new keyword.
Static Members: All members of a static class must be static (methods, properties, fields, events, etc.).
Inheritance: Static classes cannot be inherited or used as a base class.
Sealed by Default: A static class is implicitly sealed, meaning it cannot be derived from.


what are virtual and abstract method in c sharp
using System;

public abstract class AbstractBaseClass
{
    // Abstract method with no implementation
    public abstract void Display();
}

public class ConcreteDerivedClass : AbstractBaseClass
{
    // Providing implementation for the abstract method
    public override void Display()
    {
        Console.WriteLine("Display method in ConcreteDerivedClass");
    }
}

class Program
{
    static void Main()
    {
        // AbstractBaseClass abstractObj = new AbstractBaseClass(); // This line would cause a compilation error
        ConcreteDerivedClass concreteObj = new ConcreteDerivedClass();
        concreteObj.Display(); // Output: Display method in ConcreteDerivedClass

        AbstractBaseClass polymorphicObj = new ConcreteDerivedClass();
        polymorphicObj.Display(); // Output: Display method in ConcreteDerivedClass
    }
}


what are the difference ways you can improve Asp.net Page improvement?
A) Minimize server side processing
Reduce Complexity: Simplify your code to reduce processing time. Avoid complex logic in page events and use business logic in separate classes or services.
Efficient Data Access: Use efficient data access patterns, such as parameterized queries or stored procedures, and minimize database round-trips.
Caching: Utilize caching (e.g., output caching, data caching) to reduce server load and improve page response times.

B)Avoid ViewState Where Possible
Disable ViewState: ViewState increases page size and can slow down page performance. Disable it for controls that donâ€™t require it.

C) Asynchronous Programming
Async/Await: Use asynchronous programming to improve responsiveness and avoid blocking operations.

Minify CSS and JavaScript: Reduce file size by minifying CSS and JavaScript files.

Optimize Images
Image Compression: Use appropriately sized and compressed images to reduce load times.
Lazy Loading: Implement lazy loading for images to load them only when they come into the viewport.

Database latency is the delay between a query and a response from the database server
Reduce database latency

Improve Page Load Times
Error handling and logging

Postback refers to the process of submitting a form on an ASP.NET Web Forms page back to the server for processing.
When a user interacts with a page (e.g., by clicking a button), the page is submitted to the server, 
and the server processes the request and sends the updated page back to the client.


Caching - 
Output Caching - direct html page render
Output Caching stores the generated HTML of a page or control, which can be served directly to the user for subsequent requests,
avoiding the need for re-rendering or re-processing. This is particularly useful for pages with static or infrequently changing content.


Data Caching - storing data objects in memory
Data Caching involves storing data objects in memory, which can be retrieved quickly when needed. T
This can be used to cache data that is computationally expensive to retrieve or generate, such as database query results.

Application Caching
Application Caching stores global data that is shared across all users and requests.
This type of caching can be used for storing configuration settings, frequently used data, or application-wide resources.



Cache Dependencies
Cache Dependencies allow you to automatically invalidate or remove cached items when certain conditions are met, such as changes to a file or database.\



what is sliding expiration and absolute expiration?
 sliding expiration and absolute expiration are two caching mechanisms that determine how long a cached item remains in the cache 
before it is invalidated and removed. These expiration policies help control cache lifecycle and ensure that stale data is not served to users.

Absolute Expiration
Absolute expiration sets a fixed time at which the cache entry will expire and be removed from the cache, 
regardless of whether it has been accessed during that time. This is useful when you know exactly how long an item should be cached.


Sliding expiration resets the expiration timer each time the cached item is accessed. 
The item will remain in the cache as long as it is accessed within the specified time period.
If the item is not accessed within this period, it will be removed from the cache.


Enabling ViewState: Ensure ViewState is enabled to maintain control state.


what are difference types of Selector in Jquery?
 Basic Selectors - $("p") // Selects all <p> elements
$("#myId") // $(".myClass") // Selects all elements with class="myClass"
$("input[name='email']") // Selects all <input> elements with name="email"
$("input[name$='name']") // Selects all <input> elements with name ending with "name"
$("div p") // Selects all <p> elements inside <div> elements
$(":checked") // Selects all checked checkbox and radio elements
$("p:first-child") // Selects all <p> elements that are the first child of their parent


Difference between document.ready() and window.load(); in jquery
Document.ready() will work when 
method is used to execute code when the DOM (Document Object Model) is fully loaded and ready to be manipulated.
This means that the HTML has been loaded and parsed, but images, scripts, and other resources may still be loading.

Usage: It's typically used to set up event handlers, initialize plugins, or perform other setup tasks that depend on the presence of HTML elements.



$(window).load() method or the window.onload event is used to execute code when the entire page is fully loaded, 
including all images, scripts, and other resources. This occurs after the DOM is ready and all resources have been completely downloaded.
It's typically used to perform tasks that depend on the complete loading of all resources, such as actions related to image sizes or external scripts.


$(document).ready(): Runs earlier in the page loading process, allowing faster interaction with the page. - mainly for dom interaction - html skeleton
$(window).load() or window.onload: Runs later, potentially causing a delay if tasks that can be performed earlier are deferred to this point. - for event handling


JQuery Chaining
chaining is a technique that allows you to perform multiple actions on the same set of elements, 
one after another, using a single line of code.
This is possible because most jQuery methods return the jQuery object itself, allowing you to chain additional methods directly.

$('#myElement')
  .css('color', 'blue')    // Change the text color to blue
  .slideUp(300)            // Slide up the element over 300 milliseconds
  .slideDown(300);         // Slide down the element over 300 milliseconds



what is prevent dot and prevent deflaut?
, preventDefault() and stopPropagation() are methods used to control event handling in the browser

stopping a form from submitting when a submit button is clicked or preventing a link from navigating to its href.
$('form').submit(function(event) {
  event.preventDefault(); // Prevents the form from being submitted
  alert('Form submission prevented!');
});



its due to validation and checks and complete of required fields
The event.stopPropagation() stops the click event from bubbling to the parent elements.  
matlab ager mere uper koi parent element hai aya grand prent element hai toh me unki baat nhi sununga sirf apna krunga

apne se uper wale me properties lagi hai alert buttons lage hai
jisse ager mujhe koi click krega toh woh bhi click honge 
lekin stopPropagation se parents wale elements remove ho jayenge aur mere per joh events lage hai
wahi work krenge
as simple as it

what are Restful services/ why will used it?
RESTful services (Representational State Transfer) are a type of web service that follows the principles of REST architecture.
REST is an architectural style for designing networked applications and is widely used in web development to create scalable and stateless services.


what would be possible return type of Web API method?
1 - void
2 - HTTP Response Method - Provides low-level control over the HTTP response message, allowing you to set headers, status codes, and content explicitly.
3 - HTTP Action Result - kya krana hai age 


What is model binding ? MVC does automatically bind data from http get request to action method or models.
ager mujhe http request se data ko action me bhejna ho tab me model binding ka use krunga
 
Model binding allows developers to handle form submissions, query strings, route data, and other input data seamlessly and 
makes it easier to work with complex data types in web applications.


Model - Model class
Binding - Map krna or connect  krna
maps data fron Http request to action method parameters.


Student/Edit/2 ---> Will be stored in public IACtion Edit(int d){
                                         return View();
                                       }

Http request - Student/Edit/2 
matlab request se data bhejna action me usi ko model binding krte hai

Http request data example - 2  Student/Edit/2?name=Kushagra&id=7

Also, we can map our http request data to action then to models


Understanding Model
example ek class hai employee name se mene uske ander kafi sare parameters aur attributes bana rakhe hai
toh data http request se action se hote hue seedha model ke object me store hoga yani class ke object me.

Fir aap object.name krke proprties and value ko access kr sakte ho


what is different contracts in WCF?

Contracts are here to define the service of a WCF, structure of WCF

When you start WCF you have to create interface

Service Contracts - UI or interface which let you know what the services are provided
A service contract defines the operations which are exposed by the service to the outside world.
A service contract is the interface of the WCF service and it tells the outside world what the service can do. 
It may have service-level settings, such as the name of the service and namespace for the service

Operation Contract - its part of service contract, it works on return type with methods and works for logical handling and event handling
An operation contract is defined within a service contract. 
It defines the parameters and return type of an operation. 
An operation contract can also defines operation-level settings, like as the transaction flow of the op-eration,
the directions of the operation (one-way, two-way, or both ways), and fault contract of the operation.

Data Contract
A data contract defines the data type of the information that will be exchange be-tween the client and the service. 
A data contract can be used by an operation contract as a parameter or return type, or it can be used by a message contract to define elements.


Message Contract
When an operation contract required to pass a message as a parameter or return value as a message, 
the type of this message will be defined as message contract. 
A message contract defines the elements of the message (like as Message Header, Message Body), as well as the message-related settings, such as the level of message security.

























